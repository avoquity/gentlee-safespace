
-- Add check-in related fields to profiles table
ALTER TABLE public.profiles
ADD COLUMN checkin_enabled BOOLEAN DEFAULT false,
ADD COLUMN checkin_time VARCHAR(5) DEFAULT '21:00',
ADD COLUMN last_notif_sent_at TIMESTAMP WITH TIME ZONE,
ADD COLUMN notif_this_week_count INTEGER DEFAULT 0,
ADD COLUMN banner_seen BOOLEAN DEFAULT false;

-- Create push_subscriptions table
CREATE TABLE IF NOT EXISTS public.push_subscriptions (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users NOT NULL,
  subscription TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
  CONSTRAINT unique_user_subscription UNIQUE (user_id)
);

-- Add RLS policies to push_subscriptions
ALTER TABLE public.push_subscriptions ENABLE ROW LEVEL SECURITY;

-- Allow users to read and update their own subscriptions
CREATE POLICY "Users can read their own subscriptions" 
  ON public.push_subscriptions 
  FOR SELECT 
  USING (auth.uid() = user_id);

CREATE POLICY "Users can insert their own subscriptions" 
  ON public.push_subscriptions 
  FOR INSERT 
  WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own subscriptions" 
  ON public.push_subscriptions 
  FOR UPDATE 
  USING (auth.uid() = user_id);

-- Create analytics_events table for tracking push notification events
CREATE TABLE IF NOT EXISTS public.analytics_events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users,
  event_type VARCHAR(50) NOT NULL,
  event_data JSONB DEFAULT '{}'::jsonb,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

-- Add RLS policies to analytics_events (only admins can see all events)
ALTER TABLE public.analytics_events ENABLE ROW LEVEL SECURITY;

-- Allow users to insert their own analytics events
CREATE POLICY "Users can insert their own analytics events" 
  ON public.analytics_events 
  FOR INSERT 
  WITH CHECK (auth.uid() = user_id);
